from backend.app.agents.base_agent import BaseAgent

class PoetryCriticAgent(BaseAgent):
    """
    PoetryCriticAgent class for providing structured criticism of Arabic poetry.

    This agent generates a detailed analysis of a given line of Arabic poetry, 
    focusing on word choice, meaning, and style, using a specified model.

    Attributes:
    -----------
    critic_model : object
        The model used to generate criticism for the input poetry line.

    Methods:
    --------
    critic(bait: str) -> str:
        Analyzes and provides a structured critique of the given line of poetry.
    """

    def __init__(self, critic_model):
        """
        Initializes the PoetryCriticAgent with a critic model.

        :param critic_model: A model instance used for generating poetry critiques.
        """
        self.critic_model = critic_model

    def _prepare_critic_prompt(self, bait: str) -> str:
        """
        Prepares the prompt for the critic model in Arabic, formatted for structured analysis.

        The prompt instructs the critic model to analyze the given line of Arabic poetry
        by examining word choice, meaning, and style.

        :param bait: A string representing the line of Arabic poetry to be analyzed.
        :return: A structured prompt string for the critic model.
        """
        critic_prompt = """
        <s> [INST]<<SYS>>
        أنت محلل للشعر العربي و دورك أن تحلل البيت بناء على اختيار الكلمات و المعنى و الأسلوب.
        سأعطيك بيت شعر و أنت تعطيني تحليل منظم للبيت.
        The INST block will always be a JSON string:
        {
            "prompt": {البيت}
        }
        <</SYS>>
        أعطيني النقد فقط لا تقوم بكتابة أي شيء آخر.
        [/INST]
        """
        
        instruction_prompt = f"""
        [INST]
        {{
            "prompt": "{bait}"
        }}
        [/INST]
        """
        
        return critic_prompt + instruction_prompt

    def critic(self, bait: str) -> str:
        """
        Generates criticism for the given line of poetry using the critic model.

        :param bait: A string representing the line of Arabic poetry to be critiqued.
        :return: The structured critique generated by the critic model.
        """
        prompt = self._prepare_critic_prompt(bait)
        criticism = self.critic_model.generate(prompt)
        return criticism
